1. Создайте текстоовый файл как в первом ДЗ по Terminal.
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash

JSON
4. создать новый репозиторий на gitHub
3. клонировать репозиторий на локальный компьютер 
команда git clone + вставить ссылку на нужный репозиторий 
5. зайти в склонированную папку (команда cd)
6. создать файл.json командой touch
touch new.json
7. добавить файл на отправку во внешний репозиторий git add new.json
(git status -  проверить какие файлы отслеживаются для commit)
8.закоммитить файл  git commit new.json
9. отпровить файл на внешний репозиторий git push
10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.
11. отправить изменения на внешний репозиторий 
a)git add 
b) git commit -m "text message" 
c) git push
12. Создать файл preferences.json 
13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, 
любимый сериал, 
любимая еда, 
любимое время года, сторона которую хотели бы посетить) 
в формате JSON.
14. Создать файл sklls.json 
добавить информацию о скиллах которые будут изучены на курсе в формате JSON
15. Отправить сразу 2 файла на внешний репозиторий. 
git add . + git commit -m"text message"
16. На веб интерфейсе создать файл bug_report.json.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
20. Синхронизировать внешний и локальный репозиторий JSON
git pull - забрать изменения из удаленного репозитория 
или git fetch (проверить наличие изменений) git merge(забрать изменения из удаленого репозитория)

===========================
XML
===========================
21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 Всё написать в формате XML.

 28. Отправить изменения на внешний репозиторий.
git add new.xml git commit -m "update file"
 или 
git commit -am "updat file"

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
git commit -m "add 2 new files"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

=============
TXT
=============
1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит.
 5. Закоммитить файл.
 6. Отправить файл на внешний GitHub репозиторий.
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 12. Сделать коммит в одну строку.
git commit -m"add new txt files"
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT